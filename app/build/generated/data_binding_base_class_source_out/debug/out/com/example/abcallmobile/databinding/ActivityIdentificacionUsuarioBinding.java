// Generated by view binder compiler. Do not edit!
package com.example.abcallmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.abcallmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIdentificacionUsuarioBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnContinuar;

  @NonNull
  public final ScrollView contenedorDatosUsuario;

  @NonNull
  public final EditText edtNumeroDocumento;

  @NonNull
  public final Spinner spinnerTipoDoc;

  @NonNull
  public final ToolbarAbcallBinding toolbar;

  @NonNull
  public final TextView txtClienteSeleccionado;

  private ActivityIdentificacionUsuarioBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnContinuar, @NonNull ScrollView contenedorDatosUsuario,
      @NonNull EditText edtNumeroDocumento, @NonNull Spinner spinnerTipoDoc,
      @NonNull ToolbarAbcallBinding toolbar, @NonNull TextView txtClienteSeleccionado) {
    this.rootView = rootView;
    this.btnContinuar = btnContinuar;
    this.contenedorDatosUsuario = contenedorDatosUsuario;
    this.edtNumeroDocumento = edtNumeroDocumento;
    this.spinnerTipoDoc = spinnerTipoDoc;
    this.toolbar = toolbar;
    this.txtClienteSeleccionado = txtClienteSeleccionado;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIdentificacionUsuarioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIdentificacionUsuarioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_identificacion_usuario, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIdentificacionUsuarioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnContinuar;
      Button btnContinuar = ViewBindings.findChildViewById(rootView, id);
      if (btnContinuar == null) {
        break missingId;
      }

      id = R.id.contenedorDatosUsuario;
      ScrollView contenedorDatosUsuario = ViewBindings.findChildViewById(rootView, id);
      if (contenedorDatosUsuario == null) {
        break missingId;
      }

      id = R.id.edtNumeroDocumento;
      EditText edtNumeroDocumento = ViewBindings.findChildViewById(rootView, id);
      if (edtNumeroDocumento == null) {
        break missingId;
      }

      id = R.id.spinnerTipoDoc;
      Spinner spinnerTipoDoc = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTipoDoc == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarAbcallBinding binding_toolbar = ToolbarAbcallBinding.bind(toolbar);

      id = R.id.txtClienteSeleccionado;
      TextView txtClienteSeleccionado = ViewBindings.findChildViewById(rootView, id);
      if (txtClienteSeleccionado == null) {
        break missingId;
      }

      return new ActivityIdentificacionUsuarioBinding((RelativeLayout) rootView, btnContinuar,
          contenedorDatosUsuario, edtNumeroDocumento, spinnerTipoDoc, binding_toolbar,
          txtClienteSeleccionado);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

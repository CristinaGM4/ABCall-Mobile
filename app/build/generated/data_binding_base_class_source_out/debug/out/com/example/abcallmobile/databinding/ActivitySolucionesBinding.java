// Generated by view binder compiler. Do not edit!
package com.example.abcallmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.abcallmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySolucionesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView asuntoIncidente;

  @NonNull
  public final Button btnAceptar;

  @NonNull
  public final TextView incidenteId;

  @NonNull
  public final TextView preguntaSugerencias;

  @NonNull
  public final TextView titulo;

  private ActivitySolucionesBinding(@NonNull LinearLayout rootView,
      @NonNull TextView asuntoIncidente, @NonNull Button btnAceptar, @NonNull TextView incidenteId,
      @NonNull TextView preguntaSugerencias, @NonNull TextView titulo) {
    this.rootView = rootView;
    this.asuntoIncidente = asuntoIncidente;
    this.btnAceptar = btnAceptar;
    this.incidenteId = incidenteId;
    this.preguntaSugerencias = preguntaSugerencias;
    this.titulo = titulo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySolucionesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySolucionesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_soluciones, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySolucionesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.asunto_incidente;
      TextView asuntoIncidente = ViewBindings.findChildViewById(rootView, id);
      if (asuntoIncidente == null) {
        break missingId;
      }

      id = R.id.btnAceptar;
      Button btnAceptar = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptar == null) {
        break missingId;
      }

      id = R.id.incidente_id;
      TextView incidenteId = ViewBindings.findChildViewById(rootView, id);
      if (incidenteId == null) {
        break missingId;
      }

      id = R.id.pregunta_sugerencias;
      TextView preguntaSugerencias = ViewBindings.findChildViewById(rootView, id);
      if (preguntaSugerencias == null) {
        break missingId;
      }

      id = R.id.titulo;
      TextView titulo = ViewBindings.findChildViewById(rootView, id);
      if (titulo == null) {
        break missingId;
      }

      return new ActivitySolucionesBinding((LinearLayout) rootView, asuntoIncidente, btnAceptar,
          incidenteId, preguntaSugerencias, titulo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

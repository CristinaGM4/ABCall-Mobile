// Generated by view binder compiler. Do not edit!
package com.example.abcallmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.abcallmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmacionLecturaBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnConfirmarLectura;

  @NonNull
  public final LinearLayout contenidoConfirmacion;

  @NonNull
  public final TextView textoConfirmacion;

  @NonNull
  public final ToolbarAbcallBinding toolbar;

  private ActivityConfirmacionLecturaBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnConfirmarLectura, @NonNull LinearLayout contenidoConfirmacion,
      @NonNull TextView textoConfirmacion, @NonNull ToolbarAbcallBinding toolbar) {
    this.rootView = rootView;
    this.btnConfirmarLectura = btnConfirmarLectura;
    this.contenidoConfirmacion = contenidoConfirmacion;
    this.textoConfirmacion = textoConfirmacion;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmacionLecturaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmacionLecturaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirmacion_lectura, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmacionLecturaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConfirmarLectura;
      Button btnConfirmarLectura = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirmarLectura == null) {
        break missingId;
      }

      id = R.id.contenidoConfirmacion;
      LinearLayout contenidoConfirmacion = ViewBindings.findChildViewById(rootView, id);
      if (contenidoConfirmacion == null) {
        break missingId;
      }

      id = R.id.textoConfirmacion;
      TextView textoConfirmacion = ViewBindings.findChildViewById(rootView, id);
      if (textoConfirmacion == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarAbcallBinding binding_toolbar = ToolbarAbcallBinding.bind(toolbar);

      return new ActivityConfirmacionLecturaBinding((RelativeLayout) rootView, btnConfirmarLectura,
          contenidoConfirmacion, textoConfirmacion, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
